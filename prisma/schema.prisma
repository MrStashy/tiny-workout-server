generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  username     String   @unique
  email        String   @unique
  passwordHash String
  workouts     Workout[]
  profile      Profile?
}

model Profile {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  statistics   Statistic[]
  userId       Int      @unique
  user         User     @relation(fields: [userId], references: [id])
  dob          DateTime
}

model Statistic {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  profileId    Int
  profile      Profile  @relation(fields: [profileId], references: [id]) 
  name         StatisticName
  value        Int
  @@unique([profileId, name]) 
}

enum StatisticName {
  HEIGHT
  WEIGHT
}

model Workout {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id]) 
  userId       Int      
  exercises    Exercise[]
}

model Exercise {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  workoutId    Int      
  workout      Workout  @relation(fields: [workoutId], references: [id])
  name         String
  sets         Set[]
}

model Set {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  reps         Int
  weight       Int
  exerciseId   Int
  exercise     Exercise @relation(fields: [exerciseId], references: [id])
}